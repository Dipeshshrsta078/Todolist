{"version":3,"sources":["Components/TodoForm.js","Components/Todo.js","Components/TodoList.js","App.js","index.js"],"names":["TodoForm","todos","setTodos","setInputText","inputText","setStatus","status","className","type","placeholder","value","required","onChange","e","target","Button","onClick","preventDefault","text","completed","id","Math","random","alert","variant","color","size","name","Todo","todo","ButtonGroup","map","item","filteredItems","filter","selectedItem","find","TodoList","filteredTodos","div","style","margin","display","App","useState","setFilteredTodos","useEffect","getLocalTodos","handleFilter","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","localTodo","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2797e7e.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/AddOutlined\";\n\nconst TodoForm = ({\n  todos,\n  setTodos,\n  setInputText,\n  inputText,\n  status,\n  setStatus,\n}) => {\n  const handleChange = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    !inputText\n      ? alert(\"Fill Todo\")\n      : setTodos([\n          ...todos,\n          {\n            text: inputText,\n            completed: false,\n            id: Math.random() * 1000,\n          },\n        ]);\n    setInputText(\"\");\n  };\n\n  const handleStatus = (e) => {\n    setStatus(e.target.value);\n  };\n\n  return (\n    <form className=\"todo-form\">\n      <input\n        className=\"todo-input\"\n        type=\"text\"\n        placeholder=\"Add a todo\"\n        value={inputText}\n        required\n        onChange={handleChange}\n      />\n      <Button\n        className=\"todo-button\"\n        type=\"submit\"\n        onClick={handleSubmit}\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n      >\n        {/* button icon */}\n        <AddIcon />\n      </Button>\n\n      <div className=\"select\">\n        <select name=\"todos\" className=\"filter-todo\" onChange={handleStatus}>\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"uncompleted\">Uncompleted</option>\n        </select>\n      </div>\n    </form>\n  );\n};\n\nexport default TodoForm;\n","import React from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport DoneOutlineIcon from \"@material-ui/icons/DoneOutline\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport { ButtonGroup } from \"@material-ui/core\";\n//import { SettingsInputAntennaTwoTone } from \"@material-ui/icons\";\n\nconst Todo = ({ text, todo, todos, setTodos, setInputText }) => {\n  const handleDelete = () => {\n    setTodos(todos.filter((e) => e.id !== todo.id));\n  };\n\n  const handleEdit = () =>{\n    const filteredItems = todos.filter((item) => item.id !== todo.id);\n    const selectedItem = todos.find((item) => item.id === todo.id);\n    setInputText(selectedItem.text);\n    setTodos(filteredItems);\n  };\n\n  const handleComplete = () => {\n    setTodos(\n      todos.map((item) =>\n        item.id === todo.id\n          ? {\n              ...item,\n              completed: !item.completed,\n            }\n          : item\n      )\n    );\n  };\n\n  return (\n    <div className=\"todo\">\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\n        {text}{\" \"}\n      </li>\n      <ButtonGroup>\n        <Button\n          className=\"complete-btn\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleComplete}\n        >\n          <DoneOutlineIcon />\n        </Button>\n        <Button\n          className=\"edit-btn\"\n          variant=\"contained\"\n\n          onClick={handleEdit}\n        >\n          <EditOutlinedIcon />\n        </Button>\n        <Button\n          className=\"trash-btn\"\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={handleDelete}\n        >\n          <DeleteOutlineIcon />\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React from 'react';\n\nimport Todo from './Todo';\nimport Button from \"@material-ui/core/Button\";\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\n\nconst TodoList = ({todos, setTodos, filteredTodos, setInputText}) => {\n\n    const handleDeleteAll = () =>{\n        setTodos([]);\n    }\n\n    return (\n        <div div=\"todo-container\">\n            <ul className=\"todo-list\">\n                {filteredTodos.map(todo => (\n                    <Todo \n                        key={todo.id} \n                        todos={todos}\n                        todo={todo}\n                        setTodos={setTodos} \n                        text={todo.text}\n                        setInputText={setInputText} />\n                ))}\n            </ul>\n            <Button\n                    className=\"deleteall-btn\"\n                    style={{margin: '0 auto',\n                    display: \"flex\"}}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={handleDeleteAll}\n                  >\n                      <p>Delete All</p>\n                    <DeleteOutlineIcon />\n                  </Button>\n            \n        </div>\n    )\n}\n\nexport default TodoList\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./App.css\";\nimport TodoForm from \"./Components/TodoForm\";\nimport TodoList from \"./Components/TodoList\";\n\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"All\");\n  const [filteredTodos,setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    handleFilter();\n    saveLocalTodos();\n\n  }, [todos, status]);\n  const handleFilter = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default: \n        setFilteredTodos(todos)\n\n    }\n  }\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n  const getLocalTodos = () => {\n    if(localStorage.getItem(\"todos\")===null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    }\n    else {\n      let localTodo = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(localTodo);\n    }\n  }\n\n\n\n  return (\n    <div className=\"container\">\n      <header className=\"header\">\n        <h2>Dipesh's Todo List </h2>\n      </header>\n      <TodoForm\n        inputText={inputText}\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        status={status}\n        setStatus={setStatus}\n      />\n      <TodoList \n        todos={todos} \n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n        setInputText={setInputText} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}